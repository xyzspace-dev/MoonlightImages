{
  "Name": "Minecraft Forge (Moded)",
  "Author": "contact@nexocrew.com",
  "UpdateUrl": "https://raw.githubusercontent.com/nexocrew-HQ/MoonlightImages/refs/heads/main/games/minecraft/MinecraftForge(Modded).json",
  "DonateUrl": "https://ko-fi.com/jesforge",
  "StartupCommand": "java -Xms128M -Xmx{{SERVER_MEMORY}}M -Dterminal.jline=false -Dterminal.ansi=true $( [[  ! -f unix_args.txt ]] && printf %s \"-jar {{SERVER_JARFILE}}\" || printf %s \"@unix_args.txt\" )",
  "OnlineDetection": "Done",
  "StopCommand": "stop",
  "InstallShell": "/bin/bash",
  "InstallDockerImage": "openjdk:8-jdk-slim",
  "InstallScript": "#!/bin/bash\r\n\r\napt update\r\napt install -y curl jq\r\n\r\nif [[ ! -d /mnt/server ]]; then\r\n  mkdir /mnt/server\r\nfi\r\n\r\ncd /mnt/server\r\n\r\nFORGE_VERSION=\"$(echo \"$FORGE_VERSION\" | tr -d ' ')\"\r\nMC_VERSION=\"$(echo \"$MC_VERSION\" | tr -d ' ')\"\r\nif [ -z ${SERVER_JARFILE}]; then \r\n  SERVER_JARFILE=server.jar\r\nfi\r\n\r\nif [[ ! -z ${FORGE_VERSION} ]]; then\r\n  DOWNLOAD_LINK=https://maven.minecraftforge.net/net/minecraftforge/forge/${FORGE_VERSION}/forge-${FORGE_VERSION}\r\n  FORGE_JAR=forge-${FORGE_VERSION}*.jar\r\nelse\r\n  JSON_DATA=$(curl -sSL https://files.minecraftforge.net/maven/net/minecraftforge/forge/promotions_slim.json)\r\n\r\n  if [[ \"${MC_VERSION}\" == \"latest\" ]] || [[ \"${MC_VERSION}\" == \"\" ]]; then\r\n    echo -e \"getting latest version of forge.\"\r\n    MC_VERSION=$(echo -e ${JSON_DATA} | jq -r '.promos | del(.\"latest-1.7.10\") | del(.\"1.7.10-latest-1.7.10\") | to_entries[] | .key | select(contains(\"latest\")) | split(\"-\")[0]' | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n | tail -1)\r\n    BUILD_TYPE=latest\r\n  fi\r\n\r\n  if [[ \"${BUILD_TYPE}\" != \"recommended\" ]] && [[ \"${BUILD_TYPE}\" != \"latest\" ]]; then\r\n    BUILD_TYPE=recommended\r\n  fi\r\n\r\n  echo -e \"minecraft version: ${MC_VERSION}\"\r\n  echo -e \"build type: ${BUILD_TYPE}\"\r\n\r\n  FILE_SITE=https://maven.minecraftforge.net/net/minecraftforge/forge/\r\n  VERSION_KEY=$(echo -e ${JSON_DATA} | jq -r --arg MC_VERSION \"${MC_VERSION}\" --arg BUILD_TYPE \"${BUILD_TYPE}\" '.promos | del(.\"latest-1.7.10\") | del(.\"1.7.10-latest-1.7.10\") | to_entries[] | .key | select(contains($MC_VERSION)) | select(contains($BUILD_TYPE))')\r\n\r\n  if [[ \"${VERSION_KEY}\" == \"\" ]] && [[ \"${BUILD_TYPE}\" == \"recommended\" ]]; then\r\n    echo -e \"dropping back to latest from recommended due to there not being a recommended version of forge for the mc version requested.\"\r\n    VERSION_KEY=$(echo -e ${JSON_DATA} | jq -r --arg MC_VERSION \"${MC_VERSION}\" '.promos | del(.\"latest-1.7.10\") | del(.\"1.7.10-latest-1.7.10\") | to_entries[] | .key | select(contains($MC_VERSION)) | select(contains(\"latest\"))')\r\n  fi\r\n\r\n  if [ \"${VERSION_KEY}\" == \"\" ] || [ \"${VERSION_KEY}\" == \"null\" ]; then\r\n    echo -e \"The install failed because there is no valid version of forge for the version of minecraft selected.\"\r\n    exit 1\r\n  fi\r\n\r\n  FORGE_VERSION=$(echo -e ${JSON_DATA} | jq -r --arg VERSION_KEY \"$VERSION_KEY\" '.promos | .[$VERSION_KEY]')\r\n\r\n  if [[ \"${MC_VERSION}\" == \"1.7.10\" ]] || [[ \"${MC_VERSION}\" == \"1.8.9\" ]]; then\r\n    DOWNLOAD_LINK=${FILE_SITE}${MC_VERSION}-${FORGE_VERSION}-${MC_VERSION}/forge-${MC_VERSION}-${FORGE_VERSION}-${MC_VERSION}\r\n    FORGE_JAR=forge-${MC_VERSION}-${FORGE_VERSION}-${MC_VERSION}.jar\r\n    if [[ \"${MC_VERSION}\" == \"1.7.10\" ]]; then\r\n      FORGE_JAR=forge-${MC_VERSION}-${FORGE_VERSION}-${MC_VERSION}-universal.jar\r\n    fi\r\n  else\r\n    DOWNLOAD_LINK=${FILE_SITE}${MC_VERSION}-${FORGE_VERSION}/forge-${MC_VERSION}-${FORGE_VERSION}\r\n    FORGE_JAR=forge-${MC_VERSION}-${FORGE_VERSION}*.jar\r\n  fi\r\nfi\r\n\r\nif [[ ! $SERVER_JARFILE = *\\.jar ]]; then\r\n  SERVER_JARFILE=\"$SERVER_JARFILE.jar\"\r\nfi\r\n\r\necho -e \"Downloading forge version ${FORGE_VERSION}\"\r\necho -e \"Download link is ${DOWNLOAD_LINK}\"\r\n\r\nif [[ ! -z \"${DOWNLOAD_LINK}\" ]]; then\r\n  if curl -sSL --output /dev/null --head --fail ${DOWNLOAD_LINK}-installer.jar; then\r\n    echo -e \"installer jar download link is valid.\"\r\n  else\r\n    echo -e \"link is invalid. Exiting now\"\r\n    exit 2\r\n  fi\r\nelse\r\n  echo -e \"no download link provided. Exiting now\"\r\n  exit 3\r\nfi\r\n\r\ncurl -sSL -o installer.jar ${DOWNLOAD_LINK}-installer.jar\r\n\r\nif [[ ! -f ./installer.jar ]]; then\r\n  echo \"!!! Error downloading forge version ${FORGE_VERSION} !!!\"\r\n  exit\r\nfi\r\n\r\nfunction  unix_args {\r\n  echo -e \"Detected Forge 1.17 or newer version. Setting up forge unix args.\"\r\n  ln -sf libraries/net/minecraftforge/forge/*/unix_args.txt unix_args.txt\r\n}\r\n\r\nrm -rf libraries/net/minecraftforge/forge\r\nrm unix_args.txt\r\n\r\necho -e \"Installing forge server.\\n\"\r\njava -jar installer.jar --installServer || { echo -e \"install failed using Forge version ${FORGE_VERSION} and Minecraft version ${MINECRAFT_VERSION}\"; exit 4; }\r\n\r\nif [ -f ${FORGE_JAR} ]; then\r\n  mv $FORGE_JAR $SERVER_JARFILE\r\nelse\r\n  if [[ $MC_VERSION =~ ^1\\.(17|18|19|20|21|22|23) || $FORGE_VERSION =~ ^1\\.(17|18|19|20|21|22|23) ]]; then\r\n    unix_args\r\n\r\n  elif [[ $MC_VERSION == \"latest\" && $FORGE_VERSION =~ ^1\\.(17|18|19|20|21|22|23) ]]; then\r\n    unix_args\r\n  fi\r\nfi\r\n\r\nrm -rf installer.jar\r\n\r\necho \"Installed Minecraft Forge Server! (Help: https://discord.gg/3r9JPbgenb)\"\r\n",
  "ParseConfiguration": "[{\"Type\":\"properties\",\"File\":\"server.properties\",\"Configuration\":{\"server-ip\":\"0.0.0.0\",\"server-port\":\"{{SERVER_PORT}}\",\"query.port\":\"{{SERVER_PORT}}\"}}]",
  "AllocationsNeeded": 1,
  "Variables": [
    {
      "Key": "SERVER_JARFILE",
      "DefaultValue": "server.jar",
      "DisplayName": "Server Jar File",
      "Description": "The name of the Jarfile to use when running Forge version below 1.17.",
      "AllowView": true,
      "AllowEdit": true,
      "Filter": null
    },
    {
      "Key": "MC_VERSION",
      "DefaultValue": "latest",
      "DisplayName": "Minecraft Version",
      "Description": "The version of minecraft you want to install for.\r\n\r\nLeaving latest will install the latest recommended version.",
      "AllowView": true,
      "AllowEdit": true,
      "Filter": null
    },
    {
      "Key": "BUILD_TYPE",
      "DefaultValue": "recommended",
      "DisplayName": "Build Type",
      "Description": "The type of server jar to download from forge.\r\n\r\nValid types are \"recommended\" and \"latest\".",
      "AllowView": true,
      "AllowEdit": true,
      "Filter": null
    },
    {
      "Key": "FORGE_VERSION",
      "DefaultValue": "",
      "DisplayName": "Forge Version",
      "Description": "Gets an exact version.\r\n\r\nEx. 1.15.2-31.2.4\r\n\r\nOverrides MC_VERSION and BUILD_TYPE. If it fails to download the server files it will fail to install.",
      "AllowView": true,
      "AllowEdit": true,
      "Filter": null
    }
  ],
  "DefaultDockerImage": 1,
  "AllowDockerImageChange": true,
  "DockerImages": [
    {
      "DisplayName": "Java 20",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java20",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 17",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java17",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 8",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java8",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 11",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java11",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 16",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java16",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 18",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java18",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 19",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java19",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 21",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java21",
      "AutoPull": true
    },
    {
      "DisplayName": "Java 22",
      "Name": "ghcr.io/nexocrew-hq/moonlightdockerimages:java22",
      "AutoPull": true
    }
  ]
}